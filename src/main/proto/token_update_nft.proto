syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2024 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "basic_types.proto";
import "duration.proto";
import "timestamp.proto";
import "google/protobuf/wrappers.proto";

/**
 * At consensus, updates an already created Non Fungible Token to the given values.
 * 
 * If no value is given for a field, that field is left unchanged.
 * Only certain fields such as metadata can be updated. For an immutable token (that is, a token
 * without an admin key), only the expiry may be updated. Setting any other field in that case will
 * cause the transaction status to resolve to TOKEN_IS_IMMUTABLE.
 *
 * Updating the metadata of an NFT does not affect its ownership or transferability.
 * This operation is intended for updating attributes of individual NFTs in a collection.
 *
 * --- Signing Requirements ---
 * 1. Whether or not a token has an admin key, its expiry can be extended with only the transaction
 *    payer's signature.
 * 2. To update an NFT, the account that owns the NFT must sign the transaction.
 * 3. The metadata key is not required to be included in the TokenUpdateNftTransactionBody as it is
 *      not required to set the metadata. The metadata key is required to sign the metadata update.
 */
message TokenUpdateNftTransactionBody {
    /**
     * The token for which to update NFTs.
     */
    TokenID token = 1;

    /**
     * The list of serial numbers to be updated.
     */
    repeated int64 serialNumbers = 2;

    /**
     * The new metadata of the NFT(s)
     */
    google.protobuf.BytesValue metadata = 3;
}